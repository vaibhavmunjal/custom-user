# Generated by Django 3.0.2 on 2020-01-16 10:36

import accounts.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(max_length=50, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=50, verbose_name='Last Name')),
                ('mobile_number', models.CharField(max_length=16, verbose_name='Mobile Number')),
                ('email', models.EmailField(max_length=50, unique=True, verbose_name='Email')),
                ('gender', models.CharField(max_length=50, verbose_name='Gender')),
                ('dob', models.DateField(blank=True, null=True, verbose_name='Birth Date')),
                ('address', models.CharField(blank=True, max_length=100, null=True, verbose_name='Address')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to=accounts.models._Profile_image_path, verbose_name='Profile Picture')),
                ('city', models.CharField(blank=True, max_length=50, null=True, verbose_name='City')),
                ('is_staff', models.BooleanField(default=False, help_text='Is User belongs to staff', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Should User be treated as Active', verbose_name='active status')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
